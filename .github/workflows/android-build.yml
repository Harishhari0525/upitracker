name: Build Release APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the code
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract version name
        id: extract_version
        run: |
          VERSION_NAME=$(grep 'versionName = "' app/build.gradle.kts | sed -n 's/.*versionName = "\(.*\)"/\1/p')
          echo "Extracted version: $VERSION_NAME"
          echo "APP_VERSION=$VERSION_NAME" >> $GITHUB_OUTPUT

      # 2) Set up JDK for the build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      # 3) Set up the Android SDK (subosito/android-action installs
      #    command-line tools + specified platforms/build-tools)
      - name: Set up Android SDK
        uses: subosito/android-action@v2
        with:
          sdk: |
            platform-tools
            platforms;android-31
            build-tools;31.0.0

      # 4) Cache Gradle wrapper & dependencies to speed up future builds
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # Cache key includes all Gradle build files so cache invalidates when dependencies change
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 5) Build the release APK
      - name: Build Release APK
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease

      # 6) Prepare Release APK
      - name: Prepare Release APK
        run: |
          mkdir -p releases
          cp app/build/outputs/apk/release/app-release.apk "releases/UPIExpenseTracker.apk"

                  - name: Upload a Build Artifact
  uses: actions/upload-artifact@v4.6.2
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.

    compression-level: # optional, default is 6
    # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

    overwrite: # optional, default is false
    # If true, hidden files will be included in the artifact. If false, hidden files will be excluded from the artifact.

    include-hidden-files: # optional, default is false
          

      - name: Create GitHub Release and Upload APK
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.APP_VERSION }}
          name: Release v${{ steps.extract_version.outputs.APP_VERSION }}
          body: |
            Release of version ${{ steps.extract_version.outputs.APP_VERSION }}.
            APK attached as "UPI Expense Tracker.apk".
          files: "releases/UPI Expense Tracker.apk"
          draft: false
          prerelease: false
